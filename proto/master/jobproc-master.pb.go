// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: proto/jobproc-master.proto

package master

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Job_ExecLang int32

const (
	Job_JAVA   Job_ExecLang = 0
	Job_GO     Job_ExecLang = 1
	Job_PYTHON Job_ExecLang = 2
	Job_C      Job_ExecLang = 3
	Job_Cpp    Job_ExecLang = 4
)

// Enum value maps for Job_ExecLang.
var (
	Job_ExecLang_name = map[int32]string{
		0: "JAVA",
		1: "GO",
		2: "PYTHON",
		3: "C",
		4: "Cpp",
	}
	Job_ExecLang_value = map[string]int32{
		"JAVA":   0,
		"GO":     1,
		"PYTHON": 2,
		"C":      3,
		"Cpp":    4,
	}
)

func (x Job_ExecLang) Enum() *Job_ExecLang {
	p := new(Job_ExecLang)
	*p = x
	return p
}

func (x Job_ExecLang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Job_ExecLang) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_jobproc_master_proto_enumTypes[0].Descriptor()
}

func (Job_ExecLang) Type() protoreflect.EnumType {
	return &file_proto_jobproc_master_proto_enumTypes[0]
}

func (x Job_ExecLang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Job_ExecLang.Descriptor instead.
func (Job_ExecLang) EnumDescriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{2, 0}
}

type RegisterStatus_NodeRegisterStatus int32

const (
	RegisterStatus_OK     RegisterStatus_NodeRegisterStatus = 0
	RegisterStatus_FAILED RegisterStatus_NodeRegisterStatus = 1
)

// Enum value maps for RegisterStatus_NodeRegisterStatus.
var (
	RegisterStatus_NodeRegisterStatus_name = map[int32]string{
		0: "OK",
		1: "FAILED",
	}
	RegisterStatus_NodeRegisterStatus_value = map[string]int32{
		"OK":     0,
		"FAILED": 1,
	}
)

func (x RegisterStatus_NodeRegisterStatus) Enum() *RegisterStatus_NodeRegisterStatus {
	p := new(RegisterStatus_NodeRegisterStatus)
	*p = x
	return p
}

func (x RegisterStatus_NodeRegisterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterStatus_NodeRegisterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_jobproc_master_proto_enumTypes[1].Descriptor()
}

func (RegisterStatus_NodeRegisterStatus) Type() protoreflect.EnumType {
	return &file_proto_jobproc_master_proto_enumTypes[1]
}

func (x RegisterStatus_NodeRegisterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterStatus_NodeRegisterStatus.Descriptor instead.
func (RegisterStatus_NodeRegisterStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{6, 0}
}

type WorkerStatus_WorkerState int32

const (
	WorkerStatus_UP   WorkerStatus_WorkerState = 0
	WorkerStatus_DOWN WorkerStatus_WorkerState = 1
)

// Enum value maps for WorkerStatus_WorkerState.
var (
	WorkerStatus_WorkerState_name = map[int32]string{
		0: "UP",
		1: "DOWN",
	}
	WorkerStatus_WorkerState_value = map[string]int32{
		"UP":   0,
		"DOWN": 1,
	}
)

func (x WorkerStatus_WorkerState) Enum() *WorkerStatus_WorkerState {
	p := new(WorkerStatus_WorkerState)
	*p = x
	return p
}

func (x WorkerStatus_WorkerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkerStatus_WorkerState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_jobproc_master_proto_enumTypes[2].Descriptor()
}

func (WorkerStatus_WorkerState) Type() protoreflect.EnumType {
	return &file_proto_jobproc_master_proto_enumTypes[2]
}

func (x WorkerStatus_WorkerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkerStatus_WorkerState.Descriptor instead.
func (WorkerStatus_WorkerState) EnumDescriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{7, 0}
}

type JobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobId) Reset() {
	*x = JobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobId) ProtoMessage() {}

func (x *JobId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobId.ProtoReflect.Descriptor instead.
func (*JobId) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{0}
}

func (x *JobId) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type JobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobRequest) Reset() {
	*x = JobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRequest) ProtoMessage() {}

func (x *JobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRequest.ProtoReflect.Descriptor instead.
func (*JobRequest) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{1}
}

func (x *JobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId    *JobId       `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Name     string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Language Job_ExecLang `protobuf:"varint,3,opt,name=language,proto3,enum=proto.Job_ExecLang" json:"language,omitempty"`
	Cmd      string       `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Parallel bool         `protobuf:"varint,5,opt,name=parallel,proto3" json:"parallel,omitempty"`
	ExecDate int32        `protobuf:"varint,6,opt,name=exec_date,json=execDate,proto3" json:"exec_date,omitempty"`
	ExecFile []byte       `protobuf:"bytes,7,opt,name=exec_file,json=execFile,proto3" json:"exec_file,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{2}
}

func (x *Job) GetJobId() *JobId {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetLanguage() Job_ExecLang {
	if x != nil {
		return x.Language
	}
	return Job_JAVA
}

func (x *Job) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Job) GetParallel() bool {
	if x != nil {
		return x.Parallel
	}
	return false
}

func (x *Job) GetExecDate() int32 {
	if x != nil {
		return x.ExecDate
	}
	return 0
}

func (x *Job) GetExecFile() []byte {
	if x != nil {
		return x.ExecFile
	}
	return nil
}

type JobDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *JobDetail) Reset() {
	*x = JobDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetail) ProtoMessage() {}

func (x *JobDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetail.ProtoReflect.Descriptor instead.
func (*JobDetail) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{3}
}

func (x *JobDetail) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobDetail        *JobDetail `protobuf:"bytes,1,opt,name=job_detail,json=jobDetail,proto3" json:"job_detail,omitempty"`
	LastExec         int32      `protobuf:"varint,2,opt,name=last_exec,json=lastExec,proto3" json:"last_exec,omitempty"`
	LastExecDuration int32      `protobuf:"varint,3,opt,name=last_exec_duration,json=lastExecDuration,proto3" json:"last_exec_duration,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{4}
}

func (x *JobStatus) GetJobDetail() *JobDetail {
	if x != nil {
		return x.JobDetail
	}
	return nil
}

func (x *JobStatus) GetLastExec() int32 {
	if x != nil {
		return x.LastExec
	}
	return 0
}

func (x *JobStatus) GetLastExecDuration() int32 {
	if x != nil {
		return x.LastExecDuration
	}
	return 0
}

type WorkerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{5}
}

func (x *WorkerInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *WorkerInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type RegisterStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  RegisterStatus_NodeRegisterStatus `protobuf:"varint,1,opt,name=status,proto3,enum=proto.RegisterStatus_NodeRegisterStatus" json:"status,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RegisterStatus) Reset() {
	*x = RegisterStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStatus) ProtoMessage() {}

func (x *RegisterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStatus.ProtoReflect.Descriptor instead.
func (*RegisterStatus) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterStatus) GetStatus() RegisterStatus_NodeRegisterStatus {
	if x != nil {
		return x.Status
	}
	return RegisterStatus_OK
}

func (x *RegisterStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerDate int32                    `protobuf:"varint,1,opt,name=worker_date,json=workerDate,proto3" json:"worker_date,omitempty"`
	State      WorkerStatus_WorkerState `protobuf:"varint,2,opt,name=state,proto3,enum=proto.WorkerStatus_WorkerState" json:"state,omitempty"`
}

func (x *WorkerStatus) Reset() {
	*x = WorkerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_jobproc_master_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStatus) ProtoMessage() {}

func (x *WorkerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_jobproc_master_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStatus.ProtoReflect.Descriptor instead.
func (*WorkerStatus) Descriptor() ([]byte, []int) {
	return file_proto_jobproc_master_proto_rawDescGZIP(), []int{7}
}

func (x *WorkerStatus) GetWorkerDate() int32 {
	if x != nil {
		return x.WorkerDate
	}
	return 0
}

func (x *WorkerStatus) GetState() WorkerStatus_WorkerState {
	if x != nil {
		return x.State
	}
	return WorkerStatus_UP
}

var File_proto_jobproc_master_proto protoreflect.FileDescriptor

var file_proto_jobproc_master_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x6f, 0x62, 0x70, 0x72, 0x6f, 0x63, 0x2d,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1e, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x22, 0x2a, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x91, 0x02, 0x0a,
	0x03, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x65, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x78, 0x65, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4c, 0x61,
	0x6e, 0x67, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x41, 0x56, 0x41, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x47, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x05, 0x0a, 0x01, 0x43, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x70, 0x70, 0x10, 0x04,
	0x22, 0x29, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x87, 0x01, 0x0a, 0x09,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x6a, 0x6f, 0x62,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x09, 0x6a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1f, 0x0a,
	0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x06, 0x0a, 0x02,
	0x55, 0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x32, 0xc6,
	0x02, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x06, 0x52,
	0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x7b, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x6a,
	0x6f, 0x62, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x42, 0x11, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6a, 0x6f, 0x62, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x2f, 0x67, 0x6f, 0x6a, 0x6f, 0x62, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x2d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_jobproc_master_proto_rawDescOnce sync.Once
	file_proto_jobproc_master_proto_rawDescData = file_proto_jobproc_master_proto_rawDesc
)

func file_proto_jobproc_master_proto_rawDescGZIP() []byte {
	file_proto_jobproc_master_proto_rawDescOnce.Do(func() {
		file_proto_jobproc_master_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_jobproc_master_proto_rawDescData)
	})
	return file_proto_jobproc_master_proto_rawDescData
}

var file_proto_jobproc_master_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_jobproc_master_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_jobproc_master_proto_goTypes = []interface{}{
	(Job_ExecLang)(0),                      // 0: proto.Job.ExecLang
	(RegisterStatus_NodeRegisterStatus)(0), // 1: proto.RegisterStatus.NodeRegisterStatus
	(WorkerStatus_WorkerState)(0),          // 2: proto.WorkerStatus.WorkerState
	(*JobId)(nil),                          // 3: proto.JobId
	(*JobRequest)(nil),                     // 4: proto.JobRequest
	(*Job)(nil),                            // 5: proto.Job
	(*JobDetail)(nil),                      // 6: proto.JobDetail
	(*JobStatus)(nil),                      // 7: proto.JobStatus
	(*WorkerInfo)(nil),                     // 8: proto.WorkerInfo
	(*RegisterStatus)(nil),                 // 9: proto.RegisterStatus
	(*WorkerStatus)(nil),                   // 10: proto.WorkerStatus
	(*empty.Empty)(nil),                    // 11: google.protobuf.Empty
}
var file_proto_jobproc_master_proto_depIdxs = []int32{
	5,  // 0: proto.JobRequest.job:type_name -> proto.Job
	3,  // 1: proto.Job.job_id:type_name -> proto.JobId
	0,  // 2: proto.Job.language:type_name -> proto.Job.ExecLang
	5,  // 3: proto.JobDetail.job:type_name -> proto.Job
	6,  // 4: proto.JobStatus.job_detail:type_name -> proto.JobDetail
	1,  // 5: proto.RegisterStatus.status:type_name -> proto.RegisterStatus.NodeRegisterStatus
	2,  // 6: proto.WorkerStatus.state:type_name -> proto.WorkerStatus.WorkerState
	3,  // 7: proto.JobProcessor.GetJob:input_type -> proto.JobId
	4,  // 8: proto.JobProcessor.RunJob:input_type -> proto.JobRequest
	3,  // 9: proto.JobProcessor.CancelJob:input_type -> proto.JobId
	3,  // 10: proto.JobProcessor.RemoveJob:input_type -> proto.JobId
	8,  // 11: proto.JobProcessor.RegisterWorker:input_type -> proto.WorkerInfo
	11, // 12: proto.JobProcessor.Heartbeat:input_type -> google.protobuf.Empty
	7,  // 13: proto.JobProcessor.GetJob:output_type -> proto.JobStatus
	7,  // 14: proto.JobProcessor.RunJob:output_type -> proto.JobStatus
	7,  // 15: proto.JobProcessor.CancelJob:output_type -> proto.JobStatus
	7,  // 16: proto.JobProcessor.RemoveJob:output_type -> proto.JobStatus
	9,  // 17: proto.JobProcessor.RegisterWorker:output_type -> proto.RegisterStatus
	11, // 18: proto.JobProcessor.Heartbeat:output_type -> google.protobuf.Empty
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_jobproc_master_proto_init() }
func file_proto_jobproc_master_proto_init() {
	if File_proto_jobproc_master_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_jobproc_master_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_jobproc_master_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_jobproc_master_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_jobproc_master_proto_goTypes,
		DependencyIndexes: file_proto_jobproc_master_proto_depIdxs,
		EnumInfos:         file_proto_jobproc_master_proto_enumTypes,
		MessageInfos:      file_proto_jobproc_master_proto_msgTypes,
	}.Build()
	File_proto_jobproc_master_proto = out.File
	file_proto_jobproc_master_proto_rawDesc = nil
	file_proto_jobproc_master_proto_goTypes = nil
	file_proto_jobproc_master_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JobProcessorClient is the client API for JobProcessor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobProcessorClient interface {
	GetJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error)
	RunJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobStatus, error)
	CancelJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error)
	RemoveJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error)
	RegisterWorker(ctx context.Context, in *WorkerInfo, opts ...grpc.CallOption) (*RegisterStatus, error)
	Heartbeat(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type jobProcessorClient struct {
	cc grpc.ClientConnInterface
}

func NewJobProcessorClient(cc grpc.ClientConnInterface) JobProcessorClient {
	return &jobProcessorClient{cc}
}

func (c *jobProcessorClient) GetJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobProcessorClient) RunJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/RunJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobProcessorClient) CancelJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/CancelJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobProcessorClient) RemoveJob(ctx context.Context, in *JobId, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/RemoveJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobProcessorClient) RegisterWorker(ctx context.Context, in *WorkerInfo, opts ...grpc.CallOption) (*RegisterStatus, error) {
	out := new(RegisterStatus)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/RegisterWorker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobProcessorClient) Heartbeat(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.JobProcessor/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobProcessorServer is the server API for JobProcessor service.
type JobProcessorServer interface {
	GetJob(context.Context, *JobId) (*JobStatus, error)
	RunJob(context.Context, *JobRequest) (*JobStatus, error)
	CancelJob(context.Context, *JobId) (*JobStatus, error)
	RemoveJob(context.Context, *JobId) (*JobStatus, error)
	RegisterWorker(context.Context, *WorkerInfo) (*RegisterStatus, error)
	Heartbeat(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedJobProcessorServer can be embedded to have forward compatible implementations.
type UnimplementedJobProcessorServer struct {
}

func (*UnimplementedJobProcessorServer) GetJob(context.Context, *JobId) (*JobStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedJobProcessorServer) RunJob(context.Context, *JobRequest) (*JobStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunJob not implemented")
}
func (*UnimplementedJobProcessorServer) CancelJob(context.Context, *JobId) (*JobStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelJob not implemented")
}
func (*UnimplementedJobProcessorServer) RemoveJob(context.Context, *JobId) (*JobStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveJob not implemented")
}
func (*UnimplementedJobProcessorServer) RegisterWorker(context.Context, *WorkerInfo) (*RegisterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterWorker not implemented")
}
func (*UnimplementedJobProcessorServer) Heartbeat(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}

func RegisterJobProcessorServer(s *grpc.Server, srv JobProcessorServer) {
	s.RegisterService(&_JobProcessor_serviceDesc, srv)
}

func _JobProcessor_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).GetJob(ctx, req.(*JobId))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobProcessor_RunJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).RunJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/RunJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).RunJob(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobProcessor_CancelJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).CancelJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/CancelJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).CancelJob(ctx, req.(*JobId))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobProcessor_RemoveJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).RemoveJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/RemoveJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).RemoveJob(ctx, req.(*JobId))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobProcessor_RegisterWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).RegisterWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/RegisterWorker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).RegisterWorker(ctx, req.(*WorkerInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobProcessor_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobProcessorServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.JobProcessor/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobProcessorServer).Heartbeat(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobProcessor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.JobProcessor",
	HandlerType: (*JobProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJob",
			Handler:    _JobProcessor_GetJob_Handler,
		},
		{
			MethodName: "RunJob",
			Handler:    _JobProcessor_RunJob_Handler,
		},
		{
			MethodName: "CancelJob",
			Handler:    _JobProcessor_CancelJob_Handler,
		},
		{
			MethodName: "RemoveJob",
			Handler:    _JobProcessor_RemoveJob_Handler,
		},
		{
			MethodName: "RegisterWorker",
			Handler:    _JobProcessor_RegisterWorker_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _JobProcessor_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/jobproc-master.proto",
}
